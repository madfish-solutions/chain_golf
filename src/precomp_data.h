// https://gist.github.com/irfansehic/9c0b204845370f372bdfccfb66ec5942
static const ge_precomp Bi[8] = {
    {
        { 25967493, -14356035, 29566456, 3660896, -12694345, 4014787, 27544626, -11754271, -6079156, 2047605 },
        { -12545711, 934262, -2722910, 3049990, -727428, 9406986, 12720692, 5043384, 19500929, -15469378 },
        { -8738181, 4489570, 9688441, -14785194, 10184609, -12363380, 29287919, 11864899, -24514362, -4438546 },
    },
    {
        { 15636291, -9688557, 24204773, -7912398, 616977, -16685262, 27787600, -14772189, 28944400, -1550024 },
        { 16568933, 4717097, -11556148, -1102322, 15682896, -11807043, 16354577, -11775962, 7689662, 11199574 },
        { 30464156, -5976125, -11779434, -15670865, 23220365, 15915852, 7512774, 10017326, -17749093, -9920357 },
    },
    {
        { 10861363, 11473154, 27284546, 1981175, -30064349, 12577861, 32867885, 14515107, -15438304, 10819380 },
        { 4708026, 6336745, 20377586, 9066809, -11272109, 6594696, -25653668, 12483688, -12668491, 5581306 },
        { 19563160, 16186464, -29386857, 4097519, 10237984, -4348115, 28542350, 13850243, -23678021, -15815942 },
    },
    {
        { 5153746, 9909285, 1723747, -2777874, 30523605, 5516873, 19480852, 5230134, -23952439, -15175766 },
        { -30269007, -3463509, 7665486, 10083793, 28475525, 1649722, 20654025, 16520125, 30598449, 7715701 },
        { 28881845, 14381568, 9657904, 3680757, -20181635, 7843316, -31400660, 1370708, 29794553, -1409300 },
    },
    {
        { -22518993, -6692182, 14201702, -8745502, -23510406, 8844726, 18474211, -1361450, -13062696, 13821877 },
        { -6455177, -7839871, 3374702, -4740862, -27098617, -10571707, 31655028, -7212327, 18853322, -14220951 },
        { 4566830, -12963868, -28974889, -12240689, -7602672, -2830569, -8514358, -10431137, 2207753, -3209784 },
    },
    {
        { -25154831, -4185821, 29681144, 7868801, -6854661, -9423865, -12437364, -663000, -31111463, -16132436 },
        { 25576264, -2703214, 7349804, -11814844, 16472782, 9300885, 3844789, 15725684, 171356, 6466918 },
        { 23103977, 13316479, 9739013, -16149481, 817875, -15038942, 8965339, -14088058, -30714912, 16193877 },
    },
    {
        { -33521811, 3180713, -2394130, 14003687, -16903474, -16270840, 17238398, 4729455, -18074513, 9256800 },
        { -25182317, -4174131, 32336398, 5036987, -21236817, 11360617, 22616405, 9761698, -19827198, 630305 },
        { -13720693, 2639453, -24237460, -7406481, 9494427, -5774029, -6554551, -15960994, -2449256, -14291300 },
    },
    {
        { -3151181, -5046075, 9282714, 6866145, -31907062, -863023, -18940575, 15033784, 25105118, -7894876 },
        { -24326370, 15950226, -31801215, -14592823, -11662737, -5090925, 1573892, -2625887, 2198790, -15804619 },
        { -3099351, 10324967, -2241613, 7453183, -5446979, -2735503, -13812022, -16236442, -32461234, -12290683 },
    },
};// didn't find full solution yet
static ge_precomp base[32][8];
static int active_row;
void cached_to_precomp(ge_precomp* preComp, ge_cached* cached)
{
    fe inverse;
    fe_invert(inverse, cached->Z);
    fe_mul(preComp->yminusx, cached->YminusX, inverse);
    fe_mul(preComp->yplusx, cached->YplusX, inverse);
    fe_mul(preComp->xy2d, cached->T2d, inverse);
}

void compute_row( ge_cached* b)
{
    ge_precomp result;
    ge_p3 p3;
    ge_p3_0(&p3);
    
    int j;
    for (  j = 0; j < 8; j++)
    {
        ge_p1p1 p1p1;
        ge_cached cached;

        ge_add(&p1p1, & p3, b);
        ge_p1p1_to_p3(& p3, & p1p1);
        ge_p3_to_cached(& cached, & p3);

        cached_to_precomp(&result, &cached);
        base[active_row][j] = result;
        // TODO WRITE TO FLASH  
        // int ap;
        // for(ap = 0; ap < 10; ap++)
        // {
        //     base[active_row][j][ap] = result.yplusx[ap];
        // }
        // for(ap = 0; ap < 10; ap++)
        // {
        //     base[active_row][j][ap] = result.yminusx[ap];
        // }        
        // for(ap = 0; ap < 10; ap++)
        // {
        //     base[active_row][j][ap] = result.xy2d[ap];
        // }
    }
}

void compute_lookup_table(ge_cached* b)
{
    ge_p3 p3;
    ge_p2 p2;
    ge_p1p1 p1p1;
    ge_cached cached;

    ge_p3_0(&p3);
    ge_add(&p1p1, &p3, b);
    ge_p1p1_to_p3(&p3, &p1p1);

    int i, k;
    for ( i = 0; i < 32; i++)
    {
        active_row = i;
        ge_p3_to_cached(&cached, &p3);
        
        compute_row(&cached);
        
        ge_p3_to_p2(&p2,  &p3);
        
        // Calculate next base point
        
        for ( k = 0; k < 7; k++)
        {
            ge_p2_dbl( &p1p1,  &p2);
            ge_p1p1_to_p2( &p2,  &p1p1);
        }
        ge_p2_dbl(& p1p1, & p2);
        ge_p1p1_to_p3(& p3, & p1p1);
    }
}

void LOOKT_write_lookup_table_to_flash(void)
{    
    // First Base point, B0
    fe ypx =  {25967493,-14356035,29566456,3660896,-12694345,4014787,27544626,-11754271,-6079156,2047605};
    fe ymx =  {-12545711,934262,-2722910,3049990,-727428,9406986,12720692,5043384,19500929,-15469378};
    fe T2d =  {-8738181,4489570,9688441,-14785194,10184609,-12363380,29287919,11864899,-24514362,-4438546};
    fe Z; fe_1(Z);
    
    ge_cached Bi0;
    
    int p;
    for(p = 0; p < 10; p++)
    {
        Bi0.YplusX[p] = ypx[p];
        Bi0.YminusX[p] = ymx[p];
        Bi0.T2d[p] = T2d[p];
        Bi0.Z[p] = Z[p];
    }
    
    compute_lookup_table(&Bi0);      
}